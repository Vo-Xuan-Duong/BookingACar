import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Row, Col, Button, Badge } from 'antd';
import { ArrowLeftOutlined, UserOutlined, SettingOutlined, CarOutlined } from '@ant-design/icons';
import { sampleCars, luxuryCars } from '../../data/sampleCars';
import './CarDetail.css';

const CarDetail = () => {
    const { carId } = useParams();
    const navigate = useNavigate();
    const [car, setCar] = useState(null);

    useEffect(() => {
        const allCars = [...sampleCars, ...luxuryCars];
        const foundCar = allCars.find(c => c.id === parseInt(carId));
        setCar(foundCar);
    }, [carId]);

    const handleGoBack = () => {
        navigate(-1);
    };

    if (!car) {
        return (
            <div className="car-detail-loading">
                <p>ƒêang t·∫£i th√¥ng tin xe...</p>
            </div>
        );
    }

    return (
        <div className="car-detail-page">
            <div className="car-detail-header">
                <Button
                    type="text"
                    icon={<ArrowLeftOutlined />}
                    onClick={handleGoBack}
                    className="back-button"
                >
                    Quay l·∫°i
                </Button>
            </div>

            <div className="car-detail-content">
                <Row gutter={[32, 32]}>
                    <Col xs={24} lg={14}>
                        <CarGallery car={car} />
                        <CarDescription car={car} />
                        <CarFeatures car={car} />
                        <CarTerms car={car} />
                    </Col>

                    <Col xs={24} lg={10}>
                        <CarInfo car={car} />
                        <BookingForm car={car} />
                    </Col>
                </Row>
            </div>
        </div>
    );
};

// Gallery ·∫£nh xe
const CarGallery = ({ car }) => {
    const [activeImage, setActiveImage] = useState(0);

    const images = [
        car.image,
        car.image,
        car.image,
        car.image
    ];

    return (
        <div className="car-gallery">
            <div className="main-image">
                <img
                    src={images[activeImage]}
                    alt={car.name}
                    className="main-car-image"
                />
                <div className="view-all-badge">
                    <Button type="primary" className="view-all-btn">
                        XEM T·∫§T C·∫¢
                    </Button>
                </div>
            </div>

            <div className="thumbnail-gallery">
                {images.map((image, index) => (
                    <div
                        key={index}
                        className={`thumbnail ${index === activeImage ? 'active' : ''}`}
                        onClick={() => setActiveImage(index)}
                    >
                        <img src={image} alt={`${car.name} ${index + 1}`} />
                    </div>
                ))}
            </div>
        </div>
    );
};

// Th√¥ng tin xe
const CarInfo = ({ car }) => {
    return (
        <div className="car-info">
            <div className="car-header">
                <h1 className="car-title">{car.name} {car.year}</h1>
                <div className="car-badges">
                    {car.available247 && (
                        <Badge count="24/7" style={{ backgroundColor: '#52c41a' }} />
                    )}
                    {car.discount && (
                        <Badge count={`-${car.discount}%`} style={{ backgroundColor: '#ff4d4f' }} />
                    )}
                </div>
            </div>

            <p className="car-location">üìç {car.location}</p>

            <div className="car-pricing">
                <div className="current-price">
                    <span className="price-value">
                        {(car.currentPrice * 1000).toLocaleString('vi-VN')}K
                    </span>
                    <span className="price-unit">/gi·ªù</span>
                </div>
                {car.originalPrice && (
                    <div className="original-price">
                        <span className="original-value">
                            {(car.originalPrice * 1000).toLocaleString('vi-VN')}K
                        </span>
                        <span className="discount-amount">
                            Ti·∫øt ki·ªám {((car.originalPrice - car.currentPrice) * 1000).toLocaleString('vi-VN')}K
                        </span>
                    </div>
                )}
            </div>

            <div className="car-features">
                <h3>ƒê·∫∑c ƒëi·ªÉm</h3>
                <Row gutter={[16, 16]}>
                    <Col span={12}>
                        <div className="feature-item">
                            <UserOutlined className="feature-icon" />
                            <div>
                                <div className="feature-label">S·ªë gh·∫ø</div>
                                <div className="feature-value">{car.seats} ch·ªó</div>
                            </div>
                        </div>
                    </Col>
                    <Col span={12}>
                        <div className="feature-item">
                            <SettingOutlined className="feature-icon" />
                            <div>
                                <div className="feature-label">Truy·ªÅn ƒë·ªông</div>
                                <div className="feature-value">{car.transmission}</div>
                            </div>
                        </div>
                    </Col>
                    <Col span={12}>
                        <div className="feature-item">
                            <CarOutlined className="feature-icon" />
                            <div>
                                <div className="feature-label">Nhi√™n li·ªáu</div>
                                <div className="feature-value">{car.fuel}</div>
                            </div>
                        </div>
                    </Col>
                    <Col span={12}>
                        <div className="feature-item">
                            <CarOutlined className="feature-icon" />
                            <div>
                                <div className="feature-label">Ti√™u hao</div>
                                <div className="feature-value">8.5L/100Km</div>
                            </div>
                        </div>
                    </Col>
                </Row>
            </div>
        </div>
    );
};

// Form ƒë·∫∑t xe
const BookingForm = ({ car }) => {
    return (
        <div className="booking-form">
            <h3>Th·ªùi gian thu√™</h3>

            <div className="time-selection">
                <div className="time-input">
                    <label>Nh·∫≠n xe</label>
                    <div className="datetime-input">
                        <span>üìÖ 00h00, 28/05/2025 ƒë·∫øn 04h00, 30/05/2025</span>
                    </div>
                    <p className="time-note">
                        Xe kh√¥ng nh·∫≠n trong kho·∫£ng gi·ªù 23h-5h, vui l√≤ng ch·ªçn khung gi·ªù kh√°c.
                    </p>
                </div>
            </div>

            <div className="pickup-location">
                <h4>üü¢ Nh·∫≠n xe t·∫°i v·ªã tr√≠ xe</h4>
                <div className="location-info">
                    <p>üìç S·ªë 1134 ƒê∆∞·ªùng C√°ch M·∫°ng Th√°ng T√°m, Ph∆∞·ªùng 04, Qu·∫≠n T√¢n B√¨nh, TP. H·ªì Ch√≠ Minh</p>
                    <p className="location-note">
                        ƒê·ªãa ƒëi·ªÉm c·ª• th·ªÉ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã sau khi thanh to√°n th√†nh c√¥ng, v√† th·ªùi gian l·∫•y xe 24/24.
                    </p>
                </div>
            </div>

            <div className="price-summary">
                <div className="price-row">
                    <span>ƒê∆°n gi√° g·ªëc:</span>
                    <span>{car.originalPrice || car.currentPrice}K/gi·ªù</span>
                </div>
                {car.discount && (
                    <div className="price-row discount">
                        <span>Khuy·∫øn m√£i gi·∫£m gi√°:</span>
                        <span>-{(car.originalPrice - car.currentPrice)}K</span>
                    </div>
                )}
                <div className="price-row total">
                    <span>Th√†nh ti·ªÅn:</span>
                    <span>{car.currentPrice}K/gi·ªù</span>
                </div>
            </div>

            <Button
                type="primary"
                size="large"
                className="rent-button"
                block
            >
                THU√ä XE
            </Button>
        </div>
    );
};

// M√¥ t·∫£ xe
const CarDescription = ({ car }) => {
    return (
        <div className="car-description">
            <h3>M√¥ t·∫£</h3>
            <p>
                {car.name} {car.year} mang ƒë·∫øn tr·∫£i nghi·ªám l√°i ƒë·∫≥ng c·∫•p v·ªõi thi·∫øt k·∫ø sang tr·ªçng v√† kh·∫£ nƒÉng v·∫≠n h√†nh m∆∞·ª£t m√†.
                Xe ƒë∆∞·ª£c trang b·ªã n·ªôi th·∫•t cao c·∫•p, gh·∫ø da ch·ªânh ƒëi·ªán, c·ª≠a s·ªï tr·ªùi v√† h·ªá th·ªëng gi·∫£i tr√≠ hi·ªán ƒë·∫°i.
                ƒê·ªông c∆° tƒÉng √°p m·∫°nh m·∫Ω nh∆∞ng v·∫´n √™m √°i, ph√π h·ª£p cho c·∫£ ƒë∆∞·ªùng ph·ªë l·∫´n cao t·ªëc.
                H·ªá th·ªëng an to√†n ti·ªÅn ti·∫øn nh∆∞ c·∫£nh b√°o ƒëi·ªÉm m√π, h·ªó tr·ª£ phanh kh·∫©n c·∫•p gi√∫p h√†nh tr√¨nh th√™m an t√¢m.
                ƒê√¢y l√† l·ª±a ch·ªçn l√Ω t∆∞·ªüng cho nh·ªØng ai c·∫ßn s·ª± tinh t·∫ø v√† ƒë·∫≥ng c·∫•p trong m·ªói chuy·∫øn ƒëi.
            </p>
        </div>
    );
};

// Ti·ªán nghi xe
const CarFeatures = ({ car }) => {
    const features = [
        { icon: 'üìª', label: 'B·∫£n ƒë·ªì' },
        { icon: 'üîµ', label: 'Bluetooth' },
        { icon: 'üì∑', label: 'Camera 360' },
        { icon: 'üìπ', label: 'Camera c·∫≠p l·ªÅ' },
        { icon: 'üìπ', label: 'Camera h√†nh tr√¨nh' },
        { icon: 'üì∑', label: 'Camera L√πi' },
        { icon: 'üö®', label: 'C·∫£m bi·∫øn l·ªëp' },
        { icon: 'üöó', label: 'C·∫£m bi·∫øn va ch·∫°m' },
        { icon: '‚ö°', label: 'C·∫£nh b√°o t·ªëc ƒë·ªô' },
        { icon: 'üìÄ', label: 'M√†n h√¨nh DVD' },
        { icon: 'üó∫Ô∏è', label: 'ƒê·ªãnh v·ªã GPS' },
        { icon: 'üîå', label: 'Khe c·∫Øm USB' },
        { icon: '‚òÇÔ∏è', label: 'L·ªëp d·ª± ph√≤ng' },
        { icon: 'üí≥', label: 'ETC' },
        { icon: 'üîê', label: 'T√∫i kh√≠ an to√†n' }
    ];

    return (
        <div className="car-features-extended">
            <h3>C√°c ti·ªán nghi kh√°c</h3>
            <Row gutter={[16, 16]}>
                {features.map((feature, index) => (
                    <Col xs={12} sm={8} md={6} key={index}>
                        <div className="feature-item-extended">
                            <span className="feature-emoji">{feature.icon}</span>
                            <span className="feature-text">{feature.label}</span>
                        </div>
                    </Col>
                ))}
            </Row>
        </div>
    );
};

// ƒêi·ªÅu kho·∫£n
const CarTerms = ({ car }) => {
    return (
        <div className="car-terms">
            <h3>ƒêi·ªÅu kho·∫£n</h3>
            <div className="terms-content">
                <p><strong>Quy ƒë·ªãnh kh√°c:</strong></p>
                <ul>
                    <li>S·ª≠ d·ª•ng xe ƒë√∫ng m·ª•c ƒë√≠ch.</li>
                    <li>Kh√¥ng s·ª≠ d·ª•ng xe thu√™ v√†o m·ª•c ƒë√≠ch phi ph√°p, tr√°i ph√°p lu·∫≠t.</li>
                    <li>Kh√¥ng s·ª≠ d·ª•ng xe thu√™ ƒë·ªÉ c·∫ßm c·ªë, th·∫ø ch·∫•p.</li>
                    <li>Kh√¥ng h√∫t thu·ªëc, nh·∫£ k·∫πo cao su, x·∫£ r√°c trong xe.</li>
                    <li>Kh√¥ng ch·ªü h√†ng qu·ªëc c·∫•m d·ªÖ ch√°y n·ªï.</li>
                    <li>Kh√¥ng ch·ªü hoa qu·∫£, th·ª±c ph·∫©m n·∫∑ng m√πi trong xe.</li>
                    <li>Khi tr·∫£ xe, n·∫øu xe b·∫©n ho·∫∑c c√≥ m√πi trong xe, kh√°ch h√†ng vui l√≤ng v·ªá sinh xe s·∫°ch s·∫Ω ho·∫∑c ƒë√≥ng ph√≠ v·ªá sinh xe.</li>
                    <li>Xe ƒë∆∞·ª£c gi·ªõi h·∫°n di chuy·ªÉn t·ªëi ƒëa 400km cho 24h, v√† t·∫ßn su·∫•t l√† 250km, 300km, 350 km cho 6h, 8h, 12h.</li>
                </ul>
                <p>Tr√¢n tr·ªçng c·∫£m ∆°n, ch√∫c qu√Ω kh√°ch h√†ng c√≥ nh·ªØng chuy·∫øn ƒëi tuy·ªát v·ªùi!</p>
            </div>
        </div>
    );
};

export default CarDetail;